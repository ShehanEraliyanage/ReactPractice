{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggle() {}\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.value,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","decrement","increase","toggle","counterReducer","state","action","type","value","store"],"sources":["D:/SLLIT/Courses/React/ReactPractice/redux/src/store/index.js"],"sourcesContent":["import { legacy_createStore as createStore } from 'redux' \r\nimport { createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\ncreateSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment() { },\r\n        decrement() { },\r\n        increase() { },\r\n        toggle(){}\r\n    }\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1, \r\n            showCounter : state.showCounter\r\n        }   \r\n    }\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.value, \r\n            showCounter : state.showCounter\r\n        }   \r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter : state.showCounter\r\n        }\r\n    }\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            counter: state.counter,\r\n            showCounter:!state.showCounter\r\n        }\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nconst store = createStore(counterReducer)\r\n\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,SAASC,WAAW,QAAO,kBAAkB;AAE7C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAAS,GAAG,CAAE,CAAC;IACfC,SAAS,GAAG,CAAE,CAAC;IACfC,QAAQ,GAAG,CAAE,CAAC;IACdC,MAAM,GAAE,CAAC;EACb;AACJ,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EAChD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAGQ,KAAK,CAACR;IACxB,CAAC;EACL;EACA,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACE,KAAK;MACrCX,WAAW,EAAGQ,KAAK,CAACR;IACxB,CAAC;EACL;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAGQ,KAAK,CAACR;IACxB,CAAC;EACL;EACA,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHX,OAAO,EAAES,KAAK,CAACT,OAAO;MACtBC,WAAW,EAAC,CAACQ,KAAK,CAACR;IACvB,CAAC;EACL;EAEA,OAAOQ,KAAK;AAChB,CAAC;AAED,MAAMI,KAAK,GAAGhB,WAAW,CAACW,cAAc,CAAC;AAGzC,eAAeK,KAAK"},"metadata":{},"sourceType":"module"}