{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.value;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1, \n//             showCounter : state.showCounter\n//         }   \n//     }\n//     if (action.type === 'increase') {\n//         return {\n//             counter: state.counter + action.value, \n//             showCounter : state.showCounter\n//         }   \n//     }\n\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter : state.showCounter\n//         }\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter:!state.showCounter\n//         }\n//     }\n\n//     return state;\n// }\n\n// const store = createStore(counterReducer)\nconst store = createStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","value","toggleCounter","store","reducer"],"sources":["D:/SLLIT/Courses/React/ReactPractice/redux/src/store/index.js"],"sourcesContent":["import { legacy_createStore as createStore } from 'redux' \r\nimport { createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment(state) { \r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n         },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.value;\r\n         },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n})\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if (action.type === 'increment') {\r\n//         return {\r\n//             counter: state.counter + 1, \r\n//             showCounter : state.showCounter\r\n//         }   \r\n//     }\r\n//     if (action.type === 'increase') {\r\n//         return {\r\n//             counter: state.counter + action.value, \r\n//             showCounter : state.showCounter\r\n//         }   \r\n//     }\r\n\r\n//     if (action.type === 'decrement') {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter : state.showCounter\r\n//         }\r\n//     }\r\n//     if (action.type === 'toggle') {\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter:!state.showCounter\r\n//         }\r\n//     }\r\n    \r\n//     return state;\r\n// }\r\n\r\n// const store = createStore(counterReducer)\r\nconst store = createStore(counterSlice.reducer)\r\n\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,SAASC,WAAW,QAAO,kBAAkB;AAE7C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IAClB,CAAC;IACFQ,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,KAAK;IAC/C,CAAC;IACFC,aAAa,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAMW,KAAK,GAAGf,WAAW,CAACK,YAAY,CAACW,OAAO,CAAC;AAG/C,eAAeD,KAAK"},"metadata":{},"sourceType":"module"}